name: API CD/CI - Development

on: 
  push:
    branches:
      - development
    paths:
      - .github/workflows/dev-deploy_api.yml
      - 'docker-compose.yml'
      - 'api/**'
  pull_request:
    paths:
      - .github/workflows/dev-deploy_api.yml
      - 'docker-compose.yml'
      - 'api/**'

env:
  ENVIRONMENT: development

jobs:
  build-and-deploy:
    runs-on: self-hosted
    if: github.ref == 'refs/heads/development'

    steps:
      - uses: actions/checkout@v2

      - name: Creating the API .env file
        run: |
          echo "SERVICE_NAME=Kattbo_VVO-API" >> .env
          echo "ENVIRONMENT=development" >> .env
          echo "SQL_DATABASE_URL=${{ secrets.SQL_DATABASE_URL }}" >> .env
          echo "SESSION_SECRET_KEY=${{ secrets.SESSION_SECRET_KEY }}" >> .env
          echo "AUTH0_DOMAIN=${{ secrets.AUTH0_DOMAIN }}" >> .env
          echo "API_AUDIENCE=${{ secrets.API_AUDIENCE }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "JWT_ALGORITHM=${{ secrets.JWT_ALGORITHM }}" >> .env
          echo "APM_SERVER_URL=${{ secrets.APM_SERVER_URL }}" >> .env
          echo "APM_SECRET_TOKEN=${{ secrets.APM_SECRET_TOKEN }}" >> .env
          echo "APM_API_KEY=${{ secrets.APM_API_KEY }}" >> .env
          echo "SMTP_SERVER=${{ secrets.SMTP_SERVER }}" >> .env
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> .env
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "ES_HOSTS"=${{ secrets.ES_HOSTS }}" >> .env
          echo "FILEBEAT_API_KEY=${{ secrets.FILEBEAT_API_KEY}}" >> .env

      - name: Building API containers
        run: |
          docker-compose -f docker-compose.yml build api

      - name: Deploying API
        run: |
          docker-compose down api --remove-orphans
          docker-compose up api -d

